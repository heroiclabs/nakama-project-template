// Copyright 2020 The Nakama Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: xoxoapi.proto

// The realtime protocol for the template match engine.

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The marks available in the game.
type Mark int32

const (
	// No mark specified. Unused.
	Mark_MARK_UNSPECIFIED Mark = 0
	// X (Cross).
	Mark_MARK_X Mark = 1
	// O (Nought).
	Mark_MARK_O Mark = 2
)

// Enum value maps for Mark.
var (
	Mark_name = map[int32]string{
		0: "MARK_UNSPECIFIED",
		1: "MARK_X",
		2: "MARK_O",
	}
	Mark_value = map[string]int32{
		"MARK_UNSPECIFIED": 0,
		"MARK_X":           1,
		"MARK_O":           2,
	}
)

func (x Mark) Enum() *Mark {
	p := new(Mark)
	*p = x
	return p
}

func (x Mark) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mark) Descriptor() protoreflect.EnumDescriptor {
	return file_xoxoapi_proto_enumTypes[0].Descriptor()
}

func (Mark) Type() protoreflect.EnumType {
	return &file_xoxoapi_proto_enumTypes[0]
}

func (x Mark) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mark.Descriptor instead.
func (Mark) EnumDescriptor() ([]byte, []int) {
	return file_xoxoapi_proto_rawDescGZIP(), []int{0}
}

// The complete set of opcodes used for communication between clients and server.
type OpCode int32

const (
	// No opcode specified. Unused.
	OpCode_OPCODE_UNSPECIFIED OpCode = 0
	// New game round starting.
	OpCode_OPCODE_START OpCode = 1
	// Update to the state of an ongoing round.
	OpCode_OPCODE_UPDATE OpCode = 2
	// A game round has just completed.
	OpCode_OPCODE_DONE OpCode = 3
	// A move the player wishes to make and sends to the server.
	OpCode_OPCODE_MOVE OpCode = 4
	// Move was rejected.
	OpCode_OPCODE_REJECTED OpCode = 5
)

// Enum value maps for OpCode.
var (
	OpCode_name = map[int32]string{
		0: "OPCODE_UNSPECIFIED",
		1: "OPCODE_START",
		2: "OPCODE_UPDATE",
		3: "OPCODE_DONE",
		4: "OPCODE_MOVE",
		5: "OPCODE_REJECTED",
	}
	OpCode_value = map[string]int32{
		"OPCODE_UNSPECIFIED": 0,
		"OPCODE_START":       1,
		"OPCODE_UPDATE":      2,
		"OPCODE_DONE":        3,
		"OPCODE_MOVE":        4,
		"OPCODE_REJECTED":    5,
	}
)

func (x OpCode) Enum() *OpCode {
	p := new(OpCode)
	*p = x
	return p
}

func (x OpCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpCode) Descriptor() protoreflect.EnumDescriptor {
	return file_xoxoapi_proto_enumTypes[1].Descriptor()
}

func (OpCode) Type() protoreflect.EnumType {
	return &file_xoxoapi_proto_enumTypes[1]
}

func (x OpCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpCode.Descriptor instead.
func (OpCode) EnumDescriptor() ([]byte, []int) {
	return file_xoxoapi_proto_rawDescGZIP(), []int{1}
}

// Message data sent by server to clients representing a new game round starting.
type Start struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current state of the board.
	Board []Mark `protobuf:"varint,1,rep,packed,name=board,proto3,enum=api.Mark" json:"board,omitempty"`
	// The assignments of the marks to players for this round.
	Marks map[string]Mark `protobuf:"bytes,2,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=api.Mark"`
	// Whose turn it is to play.
	Mark Mark `protobuf:"varint,3,opt,name=mark,proto3,enum=api.Mark" json:"mark,omitempty"`
	// The deadline time by which the player must submit their move, or forfeit.
	Deadline int64 `protobuf:"varint,4,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *Start) Reset() {
	*x = Start{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xoxoapi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Start) ProtoMessage() {}

func (x *Start) ProtoReflect() protoreflect.Message {
	mi := &file_xoxoapi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Start.ProtoReflect.Descriptor instead.
func (*Start) Descriptor() ([]byte, []int) {
	return file_xoxoapi_proto_rawDescGZIP(), []int{0}
}

func (x *Start) GetBoard() []Mark {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *Start) GetMarks() map[string]Mark {
	if x != nil {
		return x.Marks
	}
	return nil
}

func (x *Start) GetMark() Mark {
	if x != nil {
		return x.Mark
	}
	return Mark_MARK_UNSPECIFIED
}

func (x *Start) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

// A game state update sent by the server to clients.
type Update struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current state of the board.
	Board []Mark `protobuf:"varint,1,rep,packed,name=board,proto3,enum=api.Mark" json:"board,omitempty"`
	// Whose turn it is to play.
	Mark Mark `protobuf:"varint,2,opt,name=mark,proto3,enum=api.Mark" json:"mark,omitempty"`
	// The deadline time by which the player must submit their move, or forfeit.
	Deadline int64 `protobuf:"varint,3,opt,name=deadline,proto3" json:"deadline,omitempty"`
}

func (x *Update) Reset() {
	*x = Update{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xoxoapi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_xoxoapi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_xoxoapi_proto_rawDescGZIP(), []int{1}
}

func (x *Update) GetBoard() []Mark {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *Update) GetMark() Mark {
	if x != nil {
		return x.Mark
	}
	return Mark_MARK_UNSPECIFIED
}

func (x *Update) GetDeadline() int64 {
	if x != nil {
		return x.Deadline
	}
	return 0
}

// Complete game round with winner announcement.
type Done struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The final state of the board.
	Board []Mark `protobuf:"varint,1,rep,packed,name=board,proto3,enum=api.Mark" json:"board,omitempty"`
	// The winner of the game, if any. Unspecified if it's a draw.
	Winner Mark `protobuf:"varint,2,opt,name=winner,proto3,enum=api.Mark" json:"winner,omitempty"`
	// Winner board positions, if any. Used to display the row, column, or diagonal that won the game.
	// May be empty if it's a draw or the winner is by forfeit.
	WinnerPositions []int32 `protobuf:"varint,3,rep,packed,name=winner_positions,json=winnerPositions,proto3" json:"winner_positions,omitempty"`
	// Next round start time.
	NextGameStart int64 `protobuf:"varint,4,opt,name=next_game_start,json=nextGameStart,proto3" json:"next_game_start,omitempty"`
}

func (x *Done) Reset() {
	*x = Done{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xoxoapi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Done) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Done) ProtoMessage() {}

func (x *Done) ProtoReflect() protoreflect.Message {
	mi := &file_xoxoapi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Done.ProtoReflect.Descriptor instead.
func (*Done) Descriptor() ([]byte, []int) {
	return file_xoxoapi_proto_rawDescGZIP(), []int{2}
}

func (x *Done) GetBoard() []Mark {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *Done) GetWinner() Mark {
	if x != nil {
		return x.Winner
	}
	return Mark_MARK_UNSPECIFIED
}

func (x *Done) GetWinnerPositions() []int32 {
	if x != nil {
		return x.WinnerPositions
	}
	return nil
}

func (x *Done) GetNextGameStart() int64 {
	if x != nil {
		return x.NextGameStart
	}
	return 0
}

// A player intends to make a move.
type Move struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The position the player wants to place their mark in.
	Position int32 `protobuf:"varint,1,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Move) Reset() {
	*x = Move{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xoxoapi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Move) ProtoMessage() {}

func (x *Move) ProtoReflect() protoreflect.Message {
	mi := &file_xoxoapi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Move.ProtoReflect.Descriptor instead.
func (*Move) Descriptor() ([]byte, []int) {
	return file_xoxoapi_proto_rawDescGZIP(), []int{3}
}

func (x *Move) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

// Payload for an RPC request to find a match.
type RpcFindMatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User can choose a fast or normal speed match.
	Fast bool `protobuf:"varint,1,opt,name=fast,proto3" json:"fast,omitempty"`
}

func (x *RpcFindMatchRequest) Reset() {
	*x = RpcFindMatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xoxoapi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcFindMatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFindMatchRequest) ProtoMessage() {}

func (x *RpcFindMatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xoxoapi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFindMatchRequest.ProtoReflect.Descriptor instead.
func (*RpcFindMatchRequest) Descriptor() ([]byte, []int) {
	return file_xoxoapi_proto_rawDescGZIP(), []int{4}
}

func (x *RpcFindMatchRequest) GetFast() bool {
	if x != nil {
		return x.Fast
	}
	return false
}

// Payload for an RPC response containing match IDs the user can join.
type RpcFindMatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One or more matches that fit the user's request.
	MatchIds []string `protobuf:"bytes,1,rep,name=match_ids,json=matchIds,proto3" json:"match_ids,omitempty"`
}

func (x *RpcFindMatchResponse) Reset() {
	*x = RpcFindMatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xoxoapi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcFindMatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcFindMatchResponse) ProtoMessage() {}

func (x *RpcFindMatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_xoxoapi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcFindMatchResponse.ProtoReflect.Descriptor instead.
func (*RpcFindMatchResponse) Descriptor() ([]byte, []int) {
	return file_xoxoapi_proto_rawDescGZIP(), []int{5}
}

func (x *RpcFindMatchResponse) GetMatchIds() []string {
	if x != nil {
		return x.MatchIds
	}
	return nil
}

var File_xoxoapi_proto protoreflect.FileDescriptor

var file_xoxoapi_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x78, 0x6f, 0x78, 0x6f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x61, 0x70, 0x69, 0x22, 0xd5, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f,
	0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x2b, 0x0a, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x04,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0x43, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x64, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b,
	0x52, 0x04, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x04, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x06,
	0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x10, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f, 0x77, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x22, 0x22, 0x0a, 0x04, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x13, 0x52, 0x70, 0x63, 0x46, 0x69, 0x6e,
	0x64, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x61, 0x73,
	0x74, 0x22, 0x33, 0x0a, 0x14, 0x52, 0x70, 0x63, 0x46, 0x69, 0x6e, 0x64, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x49, 0x64, 0x73, 0x2a, 0x34, 0x0a, 0x04, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x58, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x52, 0x4b, 0x5f, 0x4f, 0x10, 0x02, 0x2a, 0x7c, 0x0a, 0x06,
	0x4f, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10,
	0x0a, 0x0c, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x44, 0x4f,
	0x4e, 0x45, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4d,
	0x4f, 0x56, 0x45, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x50, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x05, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x65, 0x72, 0x6f, 0x69, 0x63, 0x6c,
	0x61, 0x62, 0x73, 0x2f, 0x6e, 0x61, 0x6b, 0x61, 0x6d, 0x61, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_xoxoapi_proto_rawDescOnce sync.Once
	file_xoxoapi_proto_rawDescData = file_xoxoapi_proto_rawDesc
)

func file_xoxoapi_proto_rawDescGZIP() []byte {
	file_xoxoapi_proto_rawDescOnce.Do(func() {
		file_xoxoapi_proto_rawDescData = protoimpl.X.CompressGZIP(file_xoxoapi_proto_rawDescData)
	})
	return file_xoxoapi_proto_rawDescData
}

var file_xoxoapi_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_xoxoapi_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_xoxoapi_proto_goTypes = []interface{}{
	(Mark)(0),                    // 0: api.Mark
	(OpCode)(0),                  // 1: api.OpCode
	(*Start)(nil),                // 2: api.Start
	(*Update)(nil),               // 3: api.Update
	(*Done)(nil),                 // 4: api.Done
	(*Move)(nil),                 // 5: api.Move
	(*RpcFindMatchRequest)(nil),  // 6: api.RpcFindMatchRequest
	(*RpcFindMatchResponse)(nil), // 7: api.RpcFindMatchResponse
	nil,                          // 8: api.Start.MarksEntry
}
var file_xoxoapi_proto_depIdxs = []int32{
	0, // 0: api.Start.board:type_name -> api.Mark
	8, // 1: api.Start.marks:type_name -> api.Start.MarksEntry
	0, // 2: api.Start.mark:type_name -> api.Mark
	0, // 3: api.Update.board:type_name -> api.Mark
	0, // 4: api.Update.mark:type_name -> api.Mark
	0, // 5: api.Done.board:type_name -> api.Mark
	0, // 6: api.Done.winner:type_name -> api.Mark
	0, // 7: api.Start.MarksEntry.value:type_name -> api.Mark
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_xoxoapi_proto_init() }
func file_xoxoapi_proto_init() {
	if File_xoxoapi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_xoxoapi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Start); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xoxoapi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Update); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xoxoapi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Done); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xoxoapi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Move); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xoxoapi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcFindMatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xoxoapi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcFindMatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xoxoapi_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xoxoapi_proto_goTypes,
		DependencyIndexes: file_xoxoapi_proto_depIdxs,
		EnumInfos:         file_xoxoapi_proto_enumTypes,
		MessageInfos:      file_xoxoapi_proto_msgTypes,
	}.Build()
	File_xoxoapi_proto = out.File
	file_xoxoapi_proto_rawDesc = nil
	file_xoxoapi_proto_goTypes = nil
	file_xoxoapi_proto_depIdxs = nil
}
